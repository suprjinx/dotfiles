b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
p limit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
n
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
p limit
n
p offset
p limit
c
quit
c
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
p proxies.(interface{})
c
q
b calculateStartEnd
c
n
p arr
p limit
p offset
c
n
p arr
c
restart
c
n
p arr, limit, offset
p arr
p limit
p offset
c
n
p offset
p limit
p arr
n
p arr
p limit
p offset
n
so
p proxies
p proxies.([]interface{})
p proxies.(interface{})
c
q
c
rebuild
restart
b calculateStartEnd
c
h
p args
args
n
p offset, limit
p offset
p limit
c
args
n
p offset
p limit
c
args
n
c
args
n
p start
p end
c
args
c
args
c
args
c
args
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
n
p limit
p arraylen
n
p offset
p limit
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
args
n
p limit
n
p limit
p offset
c
args
n
p limit
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
c
args
c
args
c
args
c
args
c
args
c
args
c
args
n
c
rebuild
restart
c
args
c
args
c
args
c
args
c
restart
c
args
c
args
c
args
c
args
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
args
c
args
n
p limit
n
p limit
n
p offset
p limit
c
quit
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
c
restart
b ListProxiesPlatform
c
n
p vservers
n
p vs
n
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
nn
n
p proxyInfo
s
n
p platform
p majorVersion
n
p proxyInfo
n
p proxyInfo
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
p proxyInfo
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
p proxyInfo.Vservers
n
p proxyMap
n
p proxies
c
q
c
restart
b finalizeJob
c
n
s
n
p strings.NewReader(buf)
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
call strings.NewReader(buf)
p client
p finURI
n
c
exit
c
h
up
c
restart
b DependencyUpdate
b service.DependencyUpdate
b service.DefaultService.DependencyUpdate
b service.(*DefaultService).DependencyUpdate
b service/dependency.go:19
b dependency.go:19
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
c
restart
b /home/gewilson/Projects/orch/job-manager/internal/service/dependency.go:19
b dependency.go:19
b DependencyUpdate
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/service.DefaultService.DependencyUpdate
c
b dependency_test.go:167
restart
b dependency_test.go:167
c
p tt
c
restart
b dependency_test.go:167
c
s
c
restart
c
p s
p (*service.Service).s
p (*service.Service)(s)
p s
p s.JobPartCreator
c
p msgs
c
b WafCheckout
b (*DefaultService).WafCheckout
c
b (*DefaultService).WafCheckout
c
n
p jobRequest
n
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
p jobID
p err
c
n
p err
c
rebuild
restart
h
bp
c
n
p err
p jobID
n
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
p err
c
b wafcheckout_test.go:192
c
p targetCheckout
p request.QueueOps
n
c
b (*DefaultService).WafCheckout
restart
b (*DefaultService).WafCheckout
c
n
p inParams
n
s
n
p payloadID
n
p qName
p params
c
b TestDefaultService_WafCheckin
c
n
rebuild
b wafcheckin_test.go:191
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
so
n
p err
c
p wantErr
c
restart
c
p wantErr
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
p wantErr
c
p wantErr
n
so
n
p err
so
n
p err
so
n
p err
so
n
p err
c
bp
h
clearall
restart
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p gotRegionDeploys["rgb1"].deployments
p wantDeploysByRegionID["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
clearall
b checkinSubjobs
b checkinSubJobs
c
n
p err
n
np err
p err
c
n
p err
c
n
p err
n
p err
restart
rebuild
restart
c
n
p err
n
p err
n
p err
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p gotRegionDeploys["rgb1"].deployments
p wantDeploysByRegionID["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
n
p err
c
restart
c
n
p err
n
p err
n
p err
n
c
b service.go:281
c
restart
b service.go:281
b /home/gewilson/Projects/orch/job-manager/internal/service/service.go:281
c
p jobrequest
p jobrequest.QueueOps
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p err
p jobID
c
n
p jobID
p err
c
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p gotRegionDeploys["rgb1"].deployments
p wantDeploysByRegionID["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
restart
b auditVservers
b auditVServers
c
n
p audit.Vservers
c
p audit.Vservers
c
p audit.Vservers
n
p audited
n
storedVServers[audited]
p storedVServers[audited]
p audit
n
p audit
n
p vserver
n
p updatedVserver
p vserver
n
c
exit
n
p jobID
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p gotRegionDeploys["rgb1"].deployments
p wantDeploysByRegionID["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
restart
b auditVservers
b auditVServers
c
n
p audit.Vservers
c
p audit.Vservers
c
p audit.Vservers
n
p audited
n
storedVServers[audited]
p storedVServers[audited]
p audit
n
p audit
n
p vserver
n
p updatedVserver
p vserver
n
c
exit
b Test_chooseExcess
c
n
p t
p tt
c
restart
clearall
b proxydeprecate_private_test.go:7070
b proxydeprecate_private_test.go:707
c
clearall
restart
b proxydeprecate_private_test.go:707
c
restart
b chooseExcess
c
n
p len(deployedServersAvailable)
n
p capsetsMatch
n
p platformsMatch
n
p uniqueFQDNs
n
p uniqueFQDNs
n
p toKeep
n
b
n
p toDeprecate
p toKeep
c
rebuild
restart
c
n
h
n
p toKeep
p toDeprecate
n
p toDeprecate
p toKeep
p len(toKeep)
p len(toDeprecate)
c
exit
p err
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p gotRegionDeploys["rgb1"].deployments
p wantDeploysByRegionID["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
restart
b auditVservers
b auditVServers
c
n
p audit.Vservers
c
p audit.Vservers
c
p audit.Vservers
n
p audited
n
storedVServers[audited]
p storedVServers[audited]
p audit
n
p audit
n
p vserver
n
p updatedVserver
p vserver
n
c
exit
b Test_chooseExcess
c
n
p t
p tt
c
restart
clearall
b proxydeprecate_private_test.go:7070
b proxydeprecate_private_test.go:707
c
clearall
restart
b proxydeprecate_private_test.go:707
c
restart
b chooseExcess
c
n
p len(deployedServersAvailable)
n
p capsetsMatch
n
p platformsMatch
n
p uniqueFQDNs
n
p uniqueFQDNs
n
p toKeep
n
b
n
p toDeprecate
p toKeep
c
rebuild
restart
c
n
h
n
p toKeep
p toDeprecate
n
p toDeprecate
p toKeep
p len(toKeep)
p len(toDeprecate)
c
exit
b chooseExcess
c
n
p jobID
c
n
p jobID
c
n
p jobID
p err
c
n
p err
c
n
p err
c
n
p err
p JobID
p jobID
so
n
so
n
p err
so
p err
n
p err
c
restart
b submitDeprecateJob
c
n
c
n
s
n
c
b SubmitWAFCheckinJobParts
restart
b SubmitWAFCheckinJobParts
c
restart
c
n
p deployedByRole
c
n
s
n
p depsByRole
c
n
p deployedByRole
n
p err
p rootJobID
p wafCheckinReq
p JobRequest.JobMeta
p WafCheckinRequest.JobRequest.JobMeta
p WafCheckinReq.JobRequest.JobMeta
c
n
p rootJobID
n
s
n
p rootID
n
p checkedOut
n
s
n
s
n
p payloadID
p err
c
p rootJobID
n
s
n
p rootID
n
s
n
s
n
s
c
b buildAtomicJob
c
n
b buildAtomicJob
restart
b buildAtomicJob
c
p jb
c
p jb
n
p deployReqJson
n
p err
c
rebuild
restart
bp
c
p jb
c
p jb
n
p err
p deployReq
n
c
b WorkAtomic
c
bp
h
clearall
c
b ExecuteByJobID
exit
b ExecuteJobByID
c
n
p jb
p jb.Status
n
p err
p lock
n
p jobIDs
c
n
c
exit
b job_execution.go:45
c
n
p jb.Status
n
p jb.Status
n
p jobID
n
s
p msg
p err
p args[0]
c
b CreateJobParts
b (ProxyDeployJobTreeBuilder).CreateJobParts
bp
c
b ExecuteJob
c
n
p rootJob.Status
n
p jobCount
n
p rootJob 
n
p
rebuild
restart
c
rebuild
restart
bp
c
rebuild
restart
bp
b ExecuteJob
c
rebuild
restart
c
n
p rootJob.Status
n
b job_execution.go:147
restart
bp
c
rebuild
restart
bp
clearall
c
h
c
exit
b setJobStatus
restart
c
p jb
p jb.Status
p new_status
p newStatus
p status
c
p jb.ParentID
p status
c
p jb.ParentID
c
p jb.ParentID
p status
h
stack
c
rebuild
restart
c
exit
c
b CreateRootJob
b (*DefaultService).CreateRootJob
restart
b (*DefaultService).CreateRootJob
c
n
p rootMetaParams
n
p err
p job
c
n
p params
c
restart
b getJobPriority
c
n
p jb
c
n
c
rebuild
b getJobPriority
restart
c
n
p jb
n
p jb
c
b ExecuteJob
c
n
h
bt
p jb
n
p rootJob
c
n
p rootJob
n
p rootJob
n
p rootJob
n
c
b ExecutJobByID
b ExecuteJobByID
c
n
p jb
n
p jb
n
p err
n
p jb.Status
p internal.JobAtomicRunning
n
c
rebuild
restart
c
rebuild
restart
c
b
c
exit
b KeyGen
b (*ProxyLocker).KeyGen
b (ProxyLocker).KeyGen
b (*ProxyLocker).KeyGen
b locks.(*ProxyLocker).KeyGen
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.KeyGen
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
c
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
restart
b  bitbucket.org/defensenet/orch/pkg/locks.ProxyLocker.Acquire
bp
c
restart
c
n
p jb
n
pc
c
rebuild
restart
c
restart
c
n
p jb.ID
p &jb.ID
c
restart
c
rebuild
restart
c
n
s
n
c
restart
c
n
p rootID
p &rootID
s
c
restart
b storedlocker.Acquire
b lockerStored.go:44
c
restart
c
n
p jb
n
c
n
c
restart
c
n
p locker
p locker.Locker
h
bt
rebuild
restart
c
quit
c
b getJobStageData
b dedupe
c
n
pmsgs
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
c
n
p msgs
h
cond
cond len(msgs) > 0
bp
cond 1 len(msgs) > 0
c
n
p msgs
c
n
p msgs
cond 1 len(msgs) > 1
c
n
p msgs
c
n
p msgs
c
n
p msgs
c
rebuild
restart
bp
c
n
p msgs
c
n
p msgs
c
2
c
ccc
c
restart
b shouldSkipTask
c
n
p results
c
n
p results
c
n
p results
n
c
exit
b FindDeprecations
c
restart
b FindDeprecations
c
exit
b FindDeprecations
c
n
p vservers
n
p err
n
c
b FindDeprecations
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
restart
rebuild
restart
c
n
p vservers
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
c
restart
c
n
p vservers
n
p v
c fmt.Printf("%v", v.DeletionEligibleTime)
n
p vservers
c
b FindDeprecations
c
restart
c
bp
b FindDeprecations
restart
b FindDeprecations
c
n
p vservers
n
p v
n
p vservers
so
n
p fetchedVservers
c
rebuild
restart
c
restart
c
n
p vservers
c
rebuild
restart
c
n
p vservers
cv
c
restart
c
rebuild
restart
c
rebuild
restart
c
rebuild
restart
b testTieredSubjob
b testTieredSubJob
c
n
p payloadIDs
n
p subJobNames
n
p targetVserver
n
p targetDataCenter
n
c
clear
clearall
c
restart
b submitTier1SubJob
b submitTier1Subjob
c
n
p s
p s.VserverType
p s.vserverType
n
p jobDesc
p jobDescr
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
n
p s
n
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
p s
c
clear all
clearall
c
restart
c
clearall
c
restart
rebuild
restart
c
b dependency.go:58
c
n
p depRequest
c
p depRequest
c
restart
b dependency.go:58
c
n
p err
p depRequest
p depRequest.DependencyUpdate.Dependencies
n
p err
p depRequest.DependencyUpdate.Dependencies
c
p depRequest.DependencyUpdate.Dependencies
n
s
n
p depUpdate
c
b GetFlag
c
restart
b caching_client.GetFlag
b caching_client.go:46
c
n
p key
n
p cacheEntry
p ok
n
p flag
p err
c
restart
bp
b client.go:42
b client/client.go:42
c
n
p ok
n
p ok
n
p err
n
p body
n
p result
p var
p err
n
p ok
p flag
p result
c
b caching_client.go:49
c
p client
p cache
p client.cache
c
n
p client.cache
n
b
n
p err
c
b Test_FindPrevious
restart
b Test_FindPrevious
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
nn
n
c
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
restart
b bitbucket.org/defensenet/orch/job-manager/internal/store_test.Test_FindPreviousCompleteTask
c
n
c
restart
clear
clearall
b FindPreviousCompleteTask
c
n
p task
c
q
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p taskData
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
p string(taskData)
c
p string(taskData)
c
p string(taskData)
c
restart
c
n
p taskDataString
n
p matchData
matchData[0]
p matchData[0]
p matchData[1]
p matchData[2]
p matchData[0]
p matchData[1]
c
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
restart
b bitbucket.org/defensenet/orch/job-manager/internal/payload.CreateSha1FromTaskData
c
n
p matchData
n
p update
n
p matchData
n
p oneRegionOnly
p update
n
c
restart
c
n
p regionID
p taskDataString
config max-string-len 1000
p taskDataString
config max-string-len 2500
p taskDataString
c
restart
c
n
nn
n
p taskDataString
c
b CreateSha1FromTaskData
c
p taskData
p string(taskData)
config max-string-len 2500
p string(taskData)
config -list
p string(taskData)
config max-array-values 2500
p string(taskData)
config max-array-values 5000
config max-string-len 5000
p string(taskData)
c
exit
config max-array-values 5000
config max-string-len 5000
b CreateSha1FromTaskData
c
n
p taskDataString
n
regionID
p regionID
h
up
p task.RegionID
u
up
p regionID
up
p jb
p jb.Name
p jb.Description
up
p rootJob
p job
p jb
p jb.Description
p jb.RegionID
c
exit
b CreateSha1FromTaskData
c
p regionID
c
p regionID
c
exit
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p gotRegionDeploys["rgb1"].deployments
p wantDeploysByRegionID["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
b proxydeploy_private_test.go:503
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
p wantDeploysByRegionID["rgb1"].deployments
p gotRegionDeploys["rgb1"].deployments
c
restart
c
restart
b auditVservers
b auditVServers
c
n
p audit.Vservers
c
p audit.Vservers
c
p audit.Vservers
n
p audited
n
storedVServers[audited]
p storedVServers[audited]
p audit
n
p audit
n
p vserver
n
p updatedVserver
p vserver
n
c
exit
b Test_chooseExcess
c
n
p t
p tt
c
restart
clearall
b proxydeprecate_private_test.go:7070
b proxydeprecate_private_test.go:707
c
clearall
restart
b proxydeprecate_private_test.go:707
c
restart
b chooseExcess
c
n
p len(deployedServersAvailable)
n
p capsetsMatch
n
p platformsMatch
n
p uniqueFQDNs
n
p uniqueFQDNs
n
p toKeep
n
b
n
p toDeprecate
p toKeep
c
rebuild
restart
c
n
h
n
p toKeep
p toDeprecate
n
p toDeprecate
p toKeep
p len(toKeep)
p len(toDeprecate)
c
exit
b chooseExcess
c
b chooseExcess
c
n
c
n
p deployedServersAvailable
n
p platformsMatch
p platformOverride
p *vserver.ServiceHostData.Platform
n
p platformsMatch
n
p platformsMatch
p platformOverride
p *vserver.ServiceHostData.Platform
c
